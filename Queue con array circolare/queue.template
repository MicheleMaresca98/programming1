/*
 * queue.cpp
 *
 *  Created on: Jan 31, 2019
 *      Author: michelemaresca
 */
#include <cassert>
namespace michele_maresca {
template <class Item>
const typename queue<Item>::size_type queue<Item>::CAPACITY;

template <class Item>
queue<Item>::queue() {
count=0;
first=0;
last=CAPACITY-1;
}

template<class Item>
void queue<Item>::push(const Item& entry) {
assert(size()<CAPACITY);
last=next_index(last);
data[last]=entry;
++count;
}
template<class Item>
void queue<Item>::pop() {
	assert(!empty());
first=next_index(first);
--count;
}
}

